[gd_resource type="VisualShader" load_steps=52 format=3 uid="uid://yhb7lik07y3j"]

[ext_resource type="Texture2D" uid="uid://byad6vd7dmmmm" path="res://assets/images/balls/background.png" id="1"]

[sub_resource type="VisualShaderNodeVectorCompose" id="5"]

[sub_resource type="VisualShaderNodeFloatOp" id="6"]
default_input_values = [0, 0.0, 1, -0.05]
operator = 2

[sub_resource type="VisualShaderNodeColorFunc" id="10"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorOp" id="11"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeColorConstant" id="12"]
constant = Color(0.504476, 0.504476, 0.504476, 1)

[sub_resource type="VisualShaderNodeColorOp" id="13"]
output_port_for_preview = 0
operator = 4

[sub_resource type="VisualShaderNodeTexture" id="1"]
output_port_for_preview = 0
source = 2
texture = ExtResource("1")

[sub_resource type="VisualShaderNodeVectorCompose" id="16"]

[sub_resource type="VisualShaderNodeInput" id="17"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="19"]
default_input_values = [0, 0.0, 1, 0.167544]
operator = 2

[sub_resource type="VisualShaderNodeInput" id="2"]
input_name = "uv"

[sub_resource type="VisualShaderNodeFloatOp" id="21"]
default_input_values = [0, 0.0, 1, 0.345213]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="23"]
default_input_values = [0, 0.0, 1, 0.267254]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="24"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5)]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="25"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeVectorCompose" id="26"]

[sub_resource type="VisualShaderNodeVectorCompose" id="27"]

[sub_resource type="VisualShaderNodeFloatConstant" id="28"]
constant = 3.59

[sub_resource type="VisualShaderNodeFloatConstant" id="29"]
constant = 0.174

[sub_resource type="VisualShaderNodeVectorFunc" id="30"]
function = 26

[sub_resource type="VisualShaderNodeFloatOp" id="33"]
default_input_values = [0, 0.0, 1, 9.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="34"]
default_input_values = [0, 0.0, 1, 9.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatConstant" id="35"]
constant = 7.0

[sub_resource type="VisualShaderNodeInput" id="36"]
output_port_for_preview = 0
expanded_output_ports = [0]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeColorFunc" id="38"]

[sub_resource type="VisualShaderNodeVectorCompose" id="39"]

[sub_resource type="VisualShaderNodeFloatOp" id="41"]
default_input_values = [0, 0.0, 1, 0.19574]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="42"]
default_input_values = [0, 0.0, 1, 0.59372]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="43"]
default_input_values = [0, 0.0, 1, 0.209473]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="44"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.5, 0.5, 0.5)]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="45"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]

[sub_resource type="VisualShaderNodeVectorOp" id="3"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(3, 3, 0)]
operator = 2

[sub_resource type="VisualShaderNodeVectorFunc" id="50"]
function = 26

[sub_resource type="VisualShaderNodeMix" id="51"]
output_port_for_preview = 0
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0.3, 1, 0.2), 2, Vector3(1, 1, 1)]
op_type = 3

[sub_resource type="VisualShaderNodeFloatOp" id="52"]
default_input_values = [0, 0.0, 1, -1.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="53"]
default_input_values = [0, 0.0, 1, 2580.0]

[sub_resource type="VisualShaderNodeFloatOp" id="54"]
default_input_values = [0, 0.0, 1, 15.0]

[sub_resource type="VisualShaderNodeInput" id="55"]
input_name = "screen_uv"

[sub_resource type="VisualShaderNodeInput" id="7"]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id="56"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="59"]

[sub_resource type="VisualShaderNodeFloatOp" id="62"]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id="63"]

[sub_resource type="VisualShaderNodeFloatOp" id="64"]
default_input_values = [0, 0.0, 1, 25.0]
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="65"]
default_input_values = [0, 0.0, 1, 0.1]
operator = 5

[sub_resource type="VisualShaderNodeVectorOp" id="8"]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeVectorOp" id="66"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(1, 1, 1)]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id="67"]
default_input_values = [0, Vector3(1, 1, 1), 1, Vector3(0, 0, 0)]
operator = 1

[sub_resource type="VisualShaderNodeClamp" id="VisualShaderNodeClamp_xmaob"]
default_input_values = [0, Vector3(0, 0, 0), 1, Vector3(0, 0, 0), 2, Vector3(1, 1, 1)]
op_type = 4

[sub_resource type="VisualShaderNodeVectorCompose" id="9"]

[resource]
code = "shader_type canvas_item;
render_mode blend_disabled, unshaded;




void fragment() {
// Input:3
	vec2 n_out3p0 = UV;


// FloatConstant:47
	float n_out47p0 = 7.000000;


// VectorCompose:9
	float n_in9p2 = 0.00000;
	vec3 n_out9p0 = vec3(n_out47p0, n_out47p0, n_in9p2);


// VectorOp:6
	vec3 n_out6p0 = vec3(n_out3p0, 0.0) * n_out9p0;


// Input:7
	float n_out7p0 = TIME;


// FloatOp:12
	float n_in12p1 = -0.05000;
	float n_out12p0 = n_out7p0 * n_in12p1;


// VectorCompose:11
	vec3 n_out11p0 = vec3(n_out12p0, n_out12p0, n_out12p0);


// VectorOp:8
	vec3 n_out8p0 = n_out6p0 + n_out11p0;


	vec4 n_out2p0;
// Texture2D:2
	n_out2p0 = texture(TEXTURE, vec2(n_out8p0.xy));


	vec3 n_out14p0;
// ColorFunc:14
	{
		vec3 c = vec3(n_out2p0.xyz);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out14p0 = vec3(max2, max2, max2);
	}


// ColorConstant:16
	vec4 n_out16p0 = vec4(0.504476, 0.504476, 0.504476, 1.000000);


// ColorOp:15
	vec3 n_out15p0 = vec3(1.0) - (vec3(1.0) - n_out14p0) * (vec3(1.0) - vec3(n_out16p0.xyz));


// Input:22
	float n_out22p0 = TIME;


// FloatOp:66
	float n_in66p1 = 2580.00000;
	float n_out66p0 = n_out22p0 + n_in66p1;


// FloatOp:65
	float n_in65p1 = -1.00000;
	float n_out65p0 = n_out66p0 * n_in65p1;


// FloatOp:54
	float n_in54p1 = 0.19574;
	float n_out54p0 = n_out65p0 * n_in54p1;


// FloatOp:55
	float n_in55p1 = 0.59372;
	float n_out55p0 = n_out65p0 * n_in55p1;


// FloatOp:56
	float n_in56p1 = 0.20947;
	float n_out56p0 = n_out65p0 * n_in56p1;


// VectorCompose:52
	vec3 n_out52p0 = vec3(n_out54p0, n_out55p0, n_out56p0);


// VectorFunc:63
	vec3 n_out63p0 = sin(n_out52p0);


// FloatConstant:40
	float n_out40p0 = 3.590000;


// VectorCompose:38
	vec3 n_out38p0 = vec3(n_out40p0, n_out40p0, n_out40p0);


// VectorOp:58
	vec3 n_out58p0 = n_out63p0 + n_out38p0;


// FloatConstant:41
	float n_out41p0 = 0.174000;


// VectorCompose:39
	vec3 n_out39p0 = vec3(n_out41p0, n_out41p0, n_out41p0);


// VectorOp:57
	vec3 n_out57p0 = n_out58p0 * n_out39p0;


// Clamp:85
	vec3 n_in85p1 = vec3(0.00000, 0.00000, 0.00000);
	vec3 n_in85p2 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out85p0 = clamp(n_out57p0, n_in85p1, n_in85p2);


// FloatOp:67
	float n_in67p1 = 15.00000;
	float n_out67p0 = n_out22p0 + n_in67p1;


// FloatOp:27
	float n_in27p1 = 0.16754;
	float n_out27p0 = n_out67p0 * n_in27p1;


// FloatOp:30
	float n_in30p1 = 0.34521;
	float n_out30p0 = n_out67p0 * n_in30p1;


// FloatOp:34
	float n_in34p1 = 0.26725;
	float n_out34p0 = n_out67p0 * n_in34p1;


// VectorCompose:21
	vec3 n_out21p0 = vec3(n_out27p0, n_out30p0, n_out34p0);


// VectorFunc:42
	vec3 n_out42p0 = sin(n_out21p0);


// VectorOp:37
	vec3 n_out37p0 = n_out42p0 + n_out38p0;


// VectorOp:36
	vec3 n_out36p0 = n_out37p0 * n_out39p0;


// Input:48
	vec2 n_out48p0 = SCREEN_UV;


// VectorDecompose:73
	float n_out73p0 = vec3(n_out48p0, 0.0).x;
	float n_out73p1 = vec3(n_out48p0, 0.0).y;
	float n_out73p2 = vec3(n_out48p0, 0.0).z;


	vec3 n_out51p0;
// ColorFunc:51
	{
		vec3 c = vec3(n_out73p1);
		float max1 = max(c.r, c.g);
		float max2 = max(max1, c.b);
		n_out51p0 = vec3(max2, max2, max2);
	}


// Mix:64
	vec3 n_out64p0 = mix(n_out85p0, n_out36p0, n_out51p0);


	vec3 n_out17p0;
// ColorOp:17
	{
		float base = n_out15p0.x;
		float blend = n_out64p0.x;
		if (base < 0.5) {
			n_out17p0.x = 2.0 * base * blend;
		} else {
			n_out17p0.x = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out15p0.y;
		float blend = n_out64p0.y;
		if (base < 0.5) {
			n_out17p0.y = 2.0 * base * blend;
		} else {
			n_out17p0.y = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}
	{
		float base = n_out15p0.z;
		float blend = n_out64p0.z;
		if (base < 0.5) {
			n_out17p0.z = 2.0 * base * blend;
		} else {
			n_out17p0.z = 1.0 - 2.0 * (1.0 - blend) * (1.0 - base);
		}
	}


// Input:68
	vec2 n_out68p0 = SCREEN_UV;


// VectorOp:81
	vec3 n_in81p0 = vec3(1.00000, 1.00000, 1.00000);
	vec3 n_out81p0 = n_in81p0 - vec3(n_out68p0, 0.0);


// VectorOp:70
	vec3 n_out70p0 = vec3(n_out68p0, 0.0) * n_out81p0;


// VectorDecompose:77
	float n_out77p0 = n_out70p0.x;
	float n_out77p1 = n_out70p0.y;
	float n_out77p2 = n_out70p0.z;


// FloatOp:76
	float n_out76p0 = n_out77p0 * n_out77p1;


// FloatOp:78
	float n_in78p1 = 25.00000;
	float n_out78p0 = n_out76p0 * n_in78p1;


// FloatOp:79
	float n_in79p1 = 0.10000;
	float n_out79p0 = pow(n_out78p0, n_in79p1);


// VectorOp:80
	vec3 n_out80p0 = n_out17p0 * vec3(n_out79p0);


// Output:0
	COLOR.rgb = n_out80p0;


}
"
graph_offset = Vector2(-655.948, -349.353)
mode = 1
modes/blend = 5
flags/unshaded = true
flags/light_only = false
nodes/fragment/0/position = Vector2(2260, 360)
nodes/fragment/2/node = SubResource("1")
nodes/fragment/2/position = Vector2(240, -180)
nodes/fragment/3/node = SubResource("2")
nodes/fragment/3/position = Vector2(-520, -340)
nodes/fragment/6/node = SubResource("3")
nodes/fragment/6/position = Vector2(-140, -320)
nodes/fragment/7/node = SubResource("7")
nodes/fragment/7/position = Vector2(-600, 40)
nodes/fragment/8/node = SubResource("8")
nodes/fragment/8/position = Vector2(40, -200)
nodes/fragment/9/node = SubResource("9")
nodes/fragment/9/position = Vector2(-340, -220)
nodes/fragment/11/node = SubResource("5")
nodes/fragment/11/position = Vector2(-140, 0)
nodes/fragment/12/node = SubResource("6")
nodes/fragment/12/position = Vector2(-300, 20)
nodes/fragment/14/node = SubResource("10")
nodes/fragment/14/position = Vector2(440, -120)
nodes/fragment/15/node = SubResource("11")
nodes/fragment/15/position = Vector2(640, -160)
nodes/fragment/16/node = SubResource("12")
nodes/fragment/16/position = Vector2(480, -200)
nodes/fragment/17/node = SubResource("13")
nodes/fragment/17/position = Vector2(900, 320)
nodes/fragment/21/node = SubResource("16")
nodes/fragment/21/position = Vector2(-620, 540)
nodes/fragment/22/node = SubResource("17")
nodes/fragment/22/position = Vector2(-1460, 780)
nodes/fragment/27/node = SubResource("19")
nodes/fragment/27/position = Vector2(-780, 440)
nodes/fragment/30/node = SubResource("21")
nodes/fragment/30/position = Vector2(-780, 560)
nodes/fragment/34/node = SubResource("23")
nodes/fragment/34/position = Vector2(-780, 680)
nodes/fragment/36/node = SubResource("24")
nodes/fragment/36/position = Vector2(80, 540)
nodes/fragment/37/node = SubResource("25")
nodes/fragment/37/position = Vector2(-280, 540)
nodes/fragment/38/node = SubResource("26")
nodes/fragment/38/position = Vector2(-460, 780)
nodes/fragment/39/node = SubResource("27")
nodes/fragment/39/position = Vector2(-100, 780)
nodes/fragment/40/node = SubResource("28")
nodes/fragment/40/position = Vector2(-640, 820)
nodes/fragment/41/node = SubResource("29")
nodes/fragment/41/position = Vector2(-280, 820)
nodes/fragment/42/node = SubResource("30")
nodes/fragment/42/position = Vector2(-460, 540)
nodes/fragment/45/node = SubResource("33")
nodes/fragment/45/position = Vector2(-500, -260)
nodes/fragment/46/node = SubResource("34")
nodes/fragment/46/position = Vector2(-500, -140)
nodes/fragment/47/node = SubResource("35")
nodes/fragment/47/position = Vector2(-680, -180)
nodes/fragment/48/node = SubResource("36")
nodes/fragment/48/position = Vector2(-280, 1320)
nodes/fragment/51/node = SubResource("38")
nodes/fragment/51/position = Vector2(220, 1340)
nodes/fragment/52/node = SubResource("39")
nodes/fragment/52/position = Vector2(-620, 980)
nodes/fragment/54/node = SubResource("41")
nodes/fragment/54/position = Vector2(-780, 880)
nodes/fragment/55/node = SubResource("42")
nodes/fragment/55/position = Vector2(-780, 1000)
nodes/fragment/56/node = SubResource("43")
nodes/fragment/56/position = Vector2(-780, 1120)
nodes/fragment/57/node = SubResource("44")
nodes/fragment/57/position = Vector2(80, 980)
nodes/fragment/58/node = SubResource("45")
nodes/fragment/58/position = Vector2(-280, 980)
nodes/fragment/63/node = SubResource("50")
nodes/fragment/63/position = Vector2(-460, 980)
nodes/fragment/64/node = SubResource("51")
nodes/fragment/64/position = Vector2(640, 860)
nodes/fragment/65/node = SubResource("52")
nodes/fragment/65/position = Vector2(-960, 1000)
nodes/fragment/66/node = SubResource("53")
nodes/fragment/66/position = Vector2(-1120, 1000)
nodes/fragment/67/node = SubResource("54")
nodes/fragment/67/position = Vector2(-1120, 560)
nodes/fragment/68/node = SubResource("55")
nodes/fragment/68/position = Vector2(1140, 620)
nodes/fragment/70/node = SubResource("56")
nodes/fragment/70/position = Vector2(1720, 560)
nodes/fragment/73/node = SubResource("59")
nodes/fragment/73/position = Vector2(40, 1320)
nodes/fragment/76/node = SubResource("62")
nodes/fragment/76/position = Vector2(1560, 880)
nodes/fragment/77/node = SubResource("63")
nodes/fragment/77/position = Vector2(1380, 880)
nodes/fragment/78/node = SubResource("64")
nodes/fragment/78/position = Vector2(1720, 880)
nodes/fragment/79/node = SubResource("65")
nodes/fragment/79/position = Vector2(1880, 880)
nodes/fragment/80/node = SubResource("66")
nodes/fragment/80/position = Vector2(2080, 300)
nodes/fragment/81/node = SubResource("67")
nodes/fragment/81/position = Vector2(1500, 680)
nodes/fragment/85/node = SubResource("VisualShaderNodeClamp_xmaob")
nodes/fragment/85/position = Vector2(280, 980)
nodes/fragment/connections = PackedInt32Array(12, 0, 11, 0, 12, 0, 11, 1, 2, 0, 14, 0, 38, 0, 37, 1, 39, 0, 36, 1, 41, 0, 39, 0, 41, 0, 39, 1, 41, 0, 39, 2, 40, 0, 38, 0, 40, 0, 38, 1, 40, 0, 38, 2, 21, 0, 42, 0, 42, 0, 37, 0, 27, 0, 21, 0, 30, 0, 21, 1, 34, 0, 21, 2, 37, 0, 36, 0, 16, 0, 15, 1, 47, 0, 45, 0, 47, 0, 46, 0, 15, 0, 17, 0, 14, 0, 15, 0, 52, 0, 63, 0, 63, 0, 58, 0, 54, 0, 52, 0, 55, 0, 52, 1, 56, 0, 52, 2, 58, 0, 57, 0, 65, 0, 54, 0, 65, 0, 55, 0, 65, 0, 56, 0, 66, 0, 65, 0, 67, 0, 27, 0, 67, 0, 30, 0, 67, 0, 34, 0, 39, 0, 57, 1, 38, 0, 58, 1, 70, 0, 77, 0, 77, 0, 76, 0, 77, 1, 76, 1, 76, 0, 78, 0, 78, 0, 79, 0, 17, 0, 80, 0, 68, 0, 70, 0, 68, 0, 81, 1, 22, 0, 66, 0, 22, 0, 67, 0, 48, 0, 73, 0, 7, 0, 12, 0, 12, 0, 11, 2, 11, 0, 8, 1, 6, 0, 8, 0, 3, 0, 6, 0, 8, 0, 2, 0, 79, 0, 80, 1, 73, 1, 51, 0, 64, 0, 17, 1, 80, 0, 0, 0, 51, 0, 64, 2, 57, 0, 85, 0, 85, 0, 64, 0, 36, 0, 64, 1, 81, 0, 70, 1, 9, 0, 6, 1, 47, 0, 9, 0, 47, 0, 9, 1)
